use alloc::string::{String, ToString};

use crate::{print, println};
use crate::write_channel::WriteChannel;

// 0 =   black
// 1 = # aqua
// 2 = % cyan
const color_map: [[u8; 24]; 16] = [
    [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0],  //   ###################%
    [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0],  //  #####################%
    [0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,0],  //  ##%                ##%
    [0,1,1,2,0,0,1,1,1,1,2,0,0,1,1,1,1,1,2,0,1,1,2,0],  //  ##%  ####%  #####% ##%
    [0,1,1,2,0,1,1,1,1,1,1,2,1,1,1,1,1,1,2,0,1,1,2,0],  //  ##% ######%######% ##%
    [0,1,1,2,0,1,1,2,0,1,1,2,1,1,2,0,0,0,0,0,1,1,2,0],  //  ##% ##% ##%##%     ##%
    [0,1,1,2,0,1,1,2,0,1,1,2,1,1,2,0,0,0,0,0,1,1,2,0],  //  ##% ##% ##%##%     ##%
    [0,1,1,2,0,1,1,2,0,1,1,2,1,1,1,1,1,2,0,0,1,1,2,0],  //  ##% ##% ##%#####%  ##%
    [0,1,1,2,0,1,1,2,0,1,1,2,0,1,1,1,1,1,2,0,1,1,2,0],  //  ##% ##% ##% #####% ##%
    [0,1,1,2,0,1,1,2,0,1,1,2,0,0,0,0,1,1,2,0,1,1,2,0],  //  ##% ##% ##%    ##% ##%
    [0,1,1,2,0,1,1,2,0,1,1,2,0,0,0,0,1,1,2,0,1,1,2,0],  //  ##% ##% ##%    ##% ##%
    [0,1,1,2,0,1,1,1,1,1,1,2,1,1,1,1,1,1,2,0,1,1,2,0],  //  ##% ######%######% ##%
    [0,1,1,2,0,0,1,1,1,1,2,0,1,1,1,1,1,2,0,0,1,1,2,0],  //  ##%  ####% #####%  ##%
    [0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,0],  //  ##%                ##%
    [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0],  //  #####################%
    [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0],  //   ###################%
];

pub fn print_logo() { // extremely inefficient because of double for loops with print!() in each, as well as expensive color change calls
    for row in 0..16 {
        for col in 0..24 {
            match color_map[row][col] {
                0 => print!("&0"),
                1 => print!("&b"),
                2 => print!("&3"),
                _ => print!("&0")
            }

            print!("{}", 0xfe as char);
            //print!(" ");
        }
        println!();
    }
}